# Generated by Django 5.0.1 on 2024-01-19 12:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя актера')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('nationality', models.CharField(blank=True, max_length=100, null=True, verbose_name='Национальность')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Биография')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='actor_photos/', verbose_name='Фотография')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_number', models.IntegerField(primary_key=True, serialize=False, verbose_name='Номер зала')),
                ('capacity', models.IntegerField(verbose_name='Вместимость')),
                ('is_3d_capable', models.BooleanField(verbose_name='Возможность показа 3D')),
                ('sound_system', models.CharField(max_length=50, verbose_name='Система звука')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Имя пользователя')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Администратор')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movie_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('genre', models.CharField(max_length=100, verbose_name='Жанр')),
                ('release_date', models.DateField(verbose_name='Дата выхода')),
                ('director', models.CharField(max_length=255, verbose_name='Режиссер')),
                ('description', models.TextField(verbose_name='Описание')),
                ('duration', models.DurationField(verbose_name='Длительность')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='movie_posters/', verbose_name='Постер')),
                ('actors', models.ManyToManyField(to='films.actor', verbose_name='Актеры')),
            ],
        ),
        migrations.CreateModel(
            name='Screening',
            fields=[
                ('screening_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(verbose_name='Время начала')),
                ('duration', models.DurationField(verbose_name='Длительность')),
                ('room_number', models.IntegerField(verbose_name='Номер зала')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.movie', verbose_name='Фильм')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('reservation_id', models.AutoField(primary_key=True, serialize=False)),
                ('seat_number', models.CharField(max_length=10, verbose_name='Номер места')),
                ('reservation_date', models.DateTimeField(verbose_name='Дата бронирования')),
                ('screening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.screening', verbose_name='Сеанс')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.user', verbose_name='Пользователь')),
            ],
        ),
    ]
